# Generated by Django 3.1.1 on 2020-09-26 11:23

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('full_name', models.CharField(max_length=240)),
                ('location', models.CharField(max_length=120)),
                ('address', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120)),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=100)),
                ('date_posted', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(blank=True, choices=[('not_assigned', 'Not Assigned'), ('rejected', 'Rejected'), ('in_progress', 'In Progress'), ('completed', 'Completed')], default='not_assigned', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='VaptAssessment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('ip_address', models.TextField()),
                ('device_type', models.TextField()),
                ('comments', models.TextField()),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='activities.task')),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employee_id', models.CharField(max_length=50)),
                ('contact', models.CharField(max_length=16)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='user_designation', to='activities.department')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='user_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='task',
            name='assigned_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='application_assigned_by', to='activities.userprofile'),
        ),
        migrations.AddField(
            model_name='task',
            name='assigned_to',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='application_assigned_to', to='activities.userprofile'),
        ),
        migrations.AddField(
            model_name='department',
            name='organization',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='department_organization', to='activities.organization'),
        ),
        migrations.CreateModel(
            name='ConfigurationReview',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=300)),
                ('device_type', models.CharField(choices=[('router', 'Router'), ('switches', 'Switches'), ('firewall', 'Firewall'), ('window_server', 'Windows Server'), ('linux_server', 'Linux Server'), ('database', 'Database'), ('other', 'Other')], max_length=16)),
                ('host_count', models.IntegerField()),
                ('comments', models.TextField()),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='activities.task')),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now=True)),
                ('comment', models.TextField(max_length=500)),
                ('task', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='activities.task')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='comment_user', to='activities.userprofile')),
            ],
        ),
        migrations.CreateModel(
            name='ApplicationSecurity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=300)),
                ('url', models.URLField(max_length=300)),
                ('functionality', models.TextField(max_length=500)),
                ('business_purpose', models.TextField(max_length=500)),
                ('role_count', models.CharField(max_length=200)),
                ('loc', models.CharField(max_length=200)),
                ('host_server', models.CharField(max_length=200)),
                ('frontend_technologies', models.CharField(max_length=500)),
                ('backend_technologies', models.CharField(max_length=500)),
                ('credentials', models.TextField()),
                ('comments', models.TextField(blank=True, max_length=500, null=True)),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='activities.task')),
            ],
        ),
    ]
